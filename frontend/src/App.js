import React, { useState, useEffect } from 'react';
import axios from 'axios';
import LoginRegister from './components/LoginRegister'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º LoginRegister –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import './App.css';

const App = () => {
  const [products, setProducts] = useState([]);
  const [cart, setCart] = useState([]);
  const [cartVisible, setCartVisible] = useState(false);
  const [token, setToken] = useState(''); // –°—Ç–µ–π—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
  const [isLoggedIn, setIsLoggedIn] = useState(false); // –°—Ç–µ–π—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [search, setSearch] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('');
  const [sortOrder, setSortOrder] = useState('name');

  useEffect(() => {
    if (token) {
      setIsLoggedIn(true); // –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–∫–µ–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
    }
    axios.get('http://localhost:5000/api/products')
      .then(response => {
        setProducts(response.data);
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
      });
  }, [token]); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞

  const handleAddToCart = (product) => {
    if (!isLoggedIn) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É.');
      setIsLoggedIn(false); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
      return; // –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    }
    setCart([...cart, product]); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
  };

  const handleRemoveFromCart = (productId) => {
    setCart(cart.filter(product => product._id !== productId)); // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  };

  const handleLogout = () => {
    setIsLoggedIn(false);
    setToken('');
  };

  const filteredProducts = products
    .filter(product =>
      product.name.toLowerCase().includes(search.toLowerCase()) ||
      product.description.toLowerCase().includes(search.toLowerCase())
    )
    .filter(product =>
      selectedCategory ? product.category === selectedCategory : true
    )
    .sort((a, b) => {
      if (sortOrder === 'price') {
        return a.price - b.price;
      }
      return a.name.localeCompare(b.name);
    });

  return (
    <div className="App">
      <header className="App-header">
        <nav className="navbar">
          <img src="/logo.png" alt="Logo" className="logo" />
          <div className="navbar-links">
            {/* –ò–∫–æ–Ω–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
            {isLoggedIn && (
              <div className="user-icon" onClick={handleLogout}>
                <span>üö™</span> –í—ã–π—Ç–∏
              </div>
            )}
            {/* –ò–∫–æ–Ω–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */}
            {isLoggedIn && (
              <div className="cart-icon" onClick={() => setCartVisible(!cartVisible)}>
                <span className="cart-count">{cart.length}</span> üõí
              </div>
            )}
            {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è */}
            {isLoggedIn && (
              <div className="filters">
                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..."
                  value={search}
                  onChange={(e) => setSearch(e.target.value)}
                />
                <select
                  value={selectedCategory}
                  onChange={(e) => setSelectedCategory(e.target.value)}
                >
                  <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                  <option value="smartphones">–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã</option>
                  <option value="laptops">–ù–æ—É—Ç–±—É–∫–∏</option>
                  <option value="watches">–ß–∞—Å—ã</option>
                  <option value="headphones">–ù–∞—É—à–Ω–∏–∫–∏</option>
                </select>
                <select
                  value={sortOrder}
                  onChange={(e) => setSortOrder(e.target.value)}
                >
                  <option value="name">–ü–æ –∏–º–µ–Ω–∏</option>
                  <option value="price">–ü–æ —Ü–µ–Ω–µ</option>
                </select>
              </div>
            )}
          </div>
        </nav>
        <h1>Welcome to Our E-Commerce Platform</h1>
      </header>

      {/* –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Login/Register –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
      {!isLoggedIn ? (
        <LoginRegister setToken={setToken} setIsLoggedIn={setIsLoggedIn} />
      ) : (
        <>
          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ */}
          <div className="product-list">
            {filteredProducts.map(product => (
              <div key={product._id} className="product-card">
                <img src={product.image} alt={product.name} className="product-image" />
                <div className="product-info">
                  <h2>{product.name}</h2>
                  <p>{product.description}</p>
                  <p className="product-price">–¶–µ–Ω–∞: {product.price} ‚Ç∏</p>
                  <button className="add-to-cart-btn" onClick={() => handleAddToCart(product)}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
                </div>
              </div>
            ))}
          </div>

          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã */}
          {cartVisible && (
            <div className="cart-dropdown">
              <h2>–ö–æ—Ä–∑–∏–Ω–∞</h2>
              {cart.length === 0 ? (
                <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.</p>
              ) : (
                <div>
                  {cart.map(item => (
                    <div key={item._id} className="cart-item">
                      <img src={item.image} alt={item.name} className="cart-item-image" />
                      <div className="cart-item-info">
                        <h3>{item.name}</h3>
                        <p>{item.price} ‚Ç∏</p>
                        <button className="remove-btn" onClick={() => handleRemoveFromCart(item._id)}>–£–¥–∞–ª–∏—Ç—å</button>
                      </div>
                    </div>
                  ))}
                  <div className="cart-total">
                    <h3>–ò—Ç–æ–≥–æ: {cart.reduce((total, item) => total + item.price, 0)} ‚Ç∏</h3>
                  </div>
                </div>
              )}
            </div>
          )}
        </>
      )}

      {/* –§—É—Ç–µ—Ä —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
      <footer className="footer">
        <div className="footer-content">
          <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          <p>–ù–∞—à —Å–∞–ø–ø–æ—Ä—Ç –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!</p>
          <p>–ê–¥—Ä–µ—Å: –ê–ª–º–∞—Ç—ã, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è 123</p>
          <p>–¢–µ–ª–µ—Ñ–æ–Ω: +7 (777) 123-45-67</p>
          <p>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: support@marketplace.com</p>
        </div>
      </footer>
    </div>
  );
};

export default App;
